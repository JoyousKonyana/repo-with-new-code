// <auto-generated />
using System;
using BMW_ONBOARDING_SYSTEM.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BMW_ONBOARDING_SYSTEM.Migrations
{
    [DbContext(typeof(INF370DBContext))]
    [Migration("20211107090021_relationship between achievemtntype and achivement")]
    partial class relationshipbetweenachievemtntypeandachivement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Achievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AchievementID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AchievementDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("AchievementTypeId")
                        .HasColumnName("AchievementTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnName("CourseID")
                        .HasColumnType("int");

                    b.Property<decimal?>("MarkAchieved")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("OnboarderId")
                        .HasColumnName("OnboarderID")
                        .HasColumnType("int");

                    b.Property<int?>("QuizId")
                        .HasColumnName("QuizID")
                        .HasColumnType("int");

                    b.HasKey("AchievementId");

                    b.HasIndex("AchievementTypeId");

                    b.ToTable("Achievement");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.AchievementType", b =>
                {
                    b.Property<int>("AchievementTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AchievementTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AchievementTypeDescription")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("BadgeId")
                        .HasColumnName("BadgeID")
                        .HasColumnType("int");

                    b.HasKey("AchievementTypeId");

                    b.HasIndex("BadgeId");

                    b.ToTable("AchievementType");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.ActiveLog", b =>
                {
                    b.Property<int>("ActiveLogId")
                        .HasColumnName("ActiveLogID")
                        .HasColumnType("int");

                    b.Property<string>("ActiveLogDeviceIpaddress")
                        .HasColumnName("ActiveLogDeviceIPAddress")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ActiveLogLoginLastActiveTimestamp")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActiveLogLoginTimestamp")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("ActiveLogId");

                    b.ToTable("ActiveLog");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AddressID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId")
                        .HasColumnName("CityID")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnName("CountryID")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinceId")
                        .HasColumnName("ProvinceID")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SuburbId")
                        .HasColumnName("SuburbID")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.ArchiveStatus", b =>
                {
                    b.Property<int>("ArchiveStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ArchiveStatusID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArchieveStatusDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ArchiveStatusId");

                    b.ToTable("ArchiveStatus");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.AuditLog", b =>
                {
                    b.Property<int>("AuditLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AuditLogID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AuditLogDatestamp")
                        .HasColumnType("date");

                    b.Property<string>("AuditLogDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<TimeSpan?>("AuditLogTimestamp")
                        .HasColumnType("time");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("AuditLogId");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Badge", b =>
                {
                    b.Property<int>("BadgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BadgeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BadgeDecription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("BadgeId");

                    b.ToTable("Badge");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CityID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CityId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CountryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseDescription")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CourseDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("CourseID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.CourseCompletionStatus", b =>
                {
                    b.Property<DateTime?>("CourseCompletionStatusDate")
                        .HasColumnType("date");

                    b.Property<string>("CourseCompletionStatusDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("CourseCopletionStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CourseCopletionStatusID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseId")
                        .HasColumnName("CourseID")
                        .HasColumnType("int");

                    b.Property<int?>("OnboarderId")
                        .HasColumnName("OnboarderID")
                        .HasColumnType("int");

                    b.ToTable("CourseCompletionStatus");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Department", b =>
                {
                    b.Property<int>("DepatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DepatmentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("DepatmentId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnName("AddressID")
                        .HasColumnType("int");

                    b.Property<decimal?>("ContactNumber")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("EmployeeCalendarId")
                        .HasColumnName("EmployeeCalendarID")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeJobTitle")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("GenderId")
                        .HasColumnName("GenderID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Idnumber")
                        .HasColumnName("IDNumber")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("TitleId")
                        .HasColumnName("TitleID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("TitleId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.EmployeeCalendar", b =>
                {
                    b.Property<int>("EmployeeCalendarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeCalendarID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeCalendarLink")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("EmployeeCalendarId");

                    b.ToTable("EmployeeCalendar");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EquipmentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EquipmentBrandId")
                        .HasColumnName("EquipmentBrandID")
                        .HasColumnType("int");

                    b.Property<decimal?>("EquipmentSerialNumber")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<int?>("EquipmentTradeInStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EquipmentTradeUnDeadline")
                        .HasColumnType("datetime");

                    b.Property<int?>("EquipmentTypeId")
                        .HasColumnName("EquipmentTypeID")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.HasIndex("EquipmentBrandId");

                    b.HasIndex("EquipmentTypeId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.EquipmentBrand", b =>
                {
                    b.Property<int>("EquipmentBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EquipmentBrandID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EquipmentBrandName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EquipmentBrandId");

                    b.ToTable("EquipmentBrand");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.EquipmentQuery", b =>
                {
                    b.Property<int>("EquipmentQueryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EquipmentQueryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EquipmentId")
                        .HasColumnName("EquipmentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EquipmentQueryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EquipmentQueryDescription")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("OnboarderId")
                        .HasColumnName("OnboarderID")
                        .HasColumnType("int");

                    b.HasKey("EquipmentQueryId");

                    b.ToTable("EquipmentQuery");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.EquipmentQueryStatus", b =>
                {
                    b.Property<int>("EquipmentQueryStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EquipmentQueryStatusID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EquipmentQueryId")
                        .HasColumnName("EquipmentQueryID")
                        .HasColumnType("int");

                    b.HasKey("EquipmentQueryStatusId");

                    b.ToTable("EquipmentQueryStatus.");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.EquipmentTradeInStatus", b =>
                {
                    b.Property<int>("EquipmentTradeInStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EquipmentTradeInStatusID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EquipmentTradeInStatusDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EquipmentTradeInStatusId");

                    b.ToTable("EquipmentTradeInStatus");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.EquipmentType", b =>
                {
                    b.Property<int>("EquipmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EquipmentTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EquipmentTypeDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EquipmentTypeId");

                    b.ToTable("EquipmentType");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Faq", b =>
                {
                    b.Property<int>("Faqid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FAQID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Faqanswer")
                        .HasColumnName("FAQAnswer")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Faqdescription")
                        .HasColumnName("FAQDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Faqid");

                    b.ToTable("FAQ");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GenderID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenderDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("GenderId");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Lesson", b =>
                {
                    b.Property<int>("LessonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("LessonCompletionStatusID")
                        .HasColumnType("int");

                    b.Property<string>("LessonDescription")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LessonName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("LessonID");

                    b.HasIndex("CourseID");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.LessonCompletionStatus", b =>
                {
                    b.Property<int>("LessonCompletionStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LessonCompletionStatusID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("LessonCompletionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LessonCompletionStatusDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("LessonCompletionStatusId");

                    b.ToTable("LessonCompletionStatus");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.LessonContent", b =>
                {
                    b.Property<int>("LessonConentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LessonConentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArchiveStatusId")
                        .HasColumnName("ArchiveStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("LessonContenetTypeId")
                        .HasColumnName("LessonContenetTypeID")
                        .HasColumnType("int");

                    b.Property<string>("LessonContent1")
                        .HasColumnName("LessonContent")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LessonContentDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("LessonContentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("LessonOutcomeId")
                        .HasColumnName("LessonOutcomeID")
                        .HasColumnType("int");

                    b.HasKey("LessonConentId");

                    b.HasIndex("ArchiveStatusId");

                    b.HasIndex("LessonContentTypeId");

                    b.ToTable("LessonContent");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.LessonContentType", b =>
                {
                    b.Property<int>("LessonContentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LessonContentTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LessonContentDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("LessonContentTypeId");

                    b.ToTable("LessonContentType");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.LessonOutcome", b =>
                {
                    b.Property<int>("LessonOutcomeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LessonID")
                        .HasColumnType("int");

                    b.Property<string>("LessonOutcomeDescription")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LessonOutcomeName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("LessonOutcomeID");

                    b.HasIndex("LessonID");

                    b.ToTable("LessonOutcome");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NotificationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseId")
                        .HasColumnName("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("NotificationMessageDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("NotificationTypeId")
                        .HasColumnName("NotificationTypeID")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Onboarder", b =>
                {
                    b.Property<int>("OnboarderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.HasKey("OnboarderID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Onboarder");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.OnboarderCourseEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GraduationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OnboarderID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseID");

                    b.HasIndex("OnboarderID");

                    b.ToTable("OnboarderCourseEnrollment");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.OnboarderEquipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnName("EquipmentID")
                        .HasColumnType("int");

                    b.Property<int>("OnboarderID")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentCheckInCondition")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("EquipmentCheckInDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EquipmentCheckOutDate")
                        .HasColumnType("datetime");

                    b.HasKey("EquipmentId", "OnboarderID")
                        .HasName("PK__Onboarde__704A407D484BC86A");

                    b.HasIndex("OnboarderID");

                    b.ToTable("OnboarderEquipment");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Otp", b =>
                {
                    b.Property<int>("OtpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OTP_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OtpValue")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnName("User_ID")
                        .HasColumnType("int");

                    b.HasKey("OtpId");

                    b.ToTable("OTP");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.PostalCode", b =>
                {
                    b.Property<int>("PostalCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PostalCodeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PostalCode1")
                        .HasColumnName("PostalCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("PostalCodeId");

                    b.ToTable("PostalCode");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProvinceID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProvinceName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ProvinceId");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.QueryStatus", b =>
                {
                    b.Property<int>("EquipmentQueryStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EquipmentQueryStatusID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EquipmentQueryDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EquipmentQueryStatusId");

                    b.ToTable("QueryStatus");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestionBankId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionBankId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.QuestionAnswerOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsOptionAnswer")
                        .HasColumnType("bit");

                    b.Property<string>("Option")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionAnswerOptions");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.QuestionBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LessonOutcomeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonOutcomeID");

                    b.ToTable("QuestionBank");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.QuestionCategory", b =>
                {
                    b.Property<int>("QuestionCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QuestionCategoryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("QuestionBankId")
                        .HasColumnName("QuestionBankID")
                        .HasColumnType("int");

                    b.Property<string>("QuestionCategoryDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("QuestionCategoryId");

                    b.ToTable("QuestionCategory");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LessonOutcomeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("NumberOfQuestions")
                        .HasColumnType("int");

                    b.Property<int>("PassMarkPercentage")
                        .HasColumnType("int");

                    b.Property<int>("QuestionBankId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LessonOutcomeID");

                    b.HasIndex("QuestionBankId");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Suburb", b =>
                {
                    b.Property<int>("SuburbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SuburbID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PostalCodeId")
                        .HasColumnName("PostalCodeID")
                        .HasColumnType("int");

                    b.Property<string>("SuburbName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("SuburbId");

                    b.ToTable("Suburb");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TitleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitleDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("TitleId");

                    b.ToTable("Title");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("UserRoleId")
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserRoleDescription")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UserRoleName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Achievement", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.AchievementType", "AchievementType")
                        .WithMany("Achievement")
                        .HasForeignKey("AchievementTypeId");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.AchievementType", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.Badge", "Badge")
                        .WithMany("AchievementType")
                        .HasForeignKey("BadgeId")
                        .HasConstraintName("FK_AchievementType_Badge");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.AuditLog", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.User", "User")
                        .WithMany("AuditLog")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_AuditLog_User");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Employee", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.Department", "Department")
                        .WithMany("Employee")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Employee_Department");

                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.Title", "Title")
                        .WithMany("Employee")
                        .HasForeignKey("TitleId");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Equipment", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.EquipmentBrand", "EquipmentBrand")
                        .WithMany("Equipment")
                        .HasForeignKey("EquipmentBrandId");

                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.EquipmentType", "EquipmentType")
                        .WithMany("Equipment")
                        .HasForeignKey("EquipmentTypeId");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Lesson", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.LessonContent", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.ArchiveStatus", "ArchiveStatus")
                        .WithMany("LessonContent")
                        .HasForeignKey("ArchiveStatusId");

                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.LessonContentType", "LessonContentType")
                        .WithMany("LessonContent")
                        .HasForeignKey("LessonContentTypeId");
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.LessonOutcome", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.Lesson", "Lesson")
                        .WithMany("LessonOutcomes")
                        .HasForeignKey("LessonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Onboarder", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.Employee", "Employee")
                        .WithMany("Onboarder")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.OnboarderCourseEnrollment", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.Course", "Course")
                        .WithMany("OnBoarders")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.Onboarder", "Onboarder")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("OnboarderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.OnboarderEquipment", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.Equipment", "Equipment")
                        .WithMany("OnboarderEquipment")
                        .HasForeignKey("EquipmentId")
                        .HasConstraintName("FK__Onboarder__Equip__03F0984C")
                        .IsRequired();

                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.Onboarder", "Onboarder")
                        .WithMany("OnboarderEquipment")
                        .HasForeignKey("OnboarderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Question", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.QuestionBank", "QuestionBank")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.QuestionAnswerOption", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.Question", "Question")
                        .WithMany("AnswerOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.QuestionBank", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.LessonOutcome", "LessonOutcome")
                        .WithMany()
                        .HasForeignKey("LessonOutcomeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.Quiz", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.LessonOutcome", "LessonOutcome")
                        .WithMany("Quizzes")
                        .HasForeignKey("LessonOutcomeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.QuestionBank", "QuestionBank")
                        .WithMany("Quizzes")
                        .HasForeignKey("QuestionBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BMW_ONBOARDING_SYSTEM.Models.User", b =>
                {
                    b.HasOne("BMW_ONBOARDING_SYSTEM.Models.UserRole", "UserRole")
                        .WithMany("User")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("FK_User_UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
